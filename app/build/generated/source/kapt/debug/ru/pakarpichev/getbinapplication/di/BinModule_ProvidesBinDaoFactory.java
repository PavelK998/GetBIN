// Generated by Dagger (https://dagger.dev).
package ru.pakarpichev.getbinapplication.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import ru.pakarpichev.getbinapplication.data.AppDatabase;
import ru.pakarpichev.getbinapplication.domain.repository.BinRepository;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BinModule_ProvidesBinDaoFactory implements Factory<BinRepository> {
  private final BinModule module;

  private final Provider<AppDatabase> appDatabaseProvider;

  public BinModule_ProvidesBinDaoFactory(BinModule module,
      Provider<AppDatabase> appDatabaseProvider) {
    this.module = module;
    this.appDatabaseProvider = appDatabaseProvider;
  }

  @Override
  public BinRepository get() {
    return providesBinDao(module, appDatabaseProvider.get());
  }

  public static BinModule_ProvidesBinDaoFactory create(BinModule module,
      Provider<AppDatabase> appDatabaseProvider) {
    return new BinModule_ProvidesBinDaoFactory(module, appDatabaseProvider);
  }

  public static BinRepository providesBinDao(BinModule instance, AppDatabase appDatabase) {
    return Preconditions.checkNotNullFromProvides(instance.providesBinDao(appDatabase));
  }
}
