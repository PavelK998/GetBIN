// Generated by Dagger (https://dagger.dev).
package ru.pakarpichev.getbinapplication.domain.usecases;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import ru.pakarpichev.getbinapplication.domain.repository.RetrofitRepository;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AddRetrofitData_Factory implements Factory<AddRetrofitData> {
  private final Provider<RetrofitRepository> retrofitRepositoryProvider;

  public AddRetrofitData_Factory(Provider<RetrofitRepository> retrofitRepositoryProvider) {
    this.retrofitRepositoryProvider = retrofitRepositoryProvider;
  }

  @Override
  public AddRetrofitData get() {
    return newInstance(retrofitRepositoryProvider.get());
  }

  public static AddRetrofitData_Factory create(
      Provider<RetrofitRepository> retrofitRepositoryProvider) {
    return new AddRetrofitData_Factory(retrofitRepositoryProvider);
  }

  public static AddRetrofitData newInstance(RetrofitRepository retrofitRepository) {
    return new AddRetrofitData(retrofitRepository);
  }
}
