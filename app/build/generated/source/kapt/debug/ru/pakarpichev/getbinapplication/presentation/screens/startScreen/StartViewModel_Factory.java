// Generated by Dagger (https://dagger.dev).
package ru.pakarpichev.getbinapplication.presentation.screens.startScreen;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import ru.pakarpichev.getbinapplication.domain.usecases.InsertDataUseCase;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class StartViewModel_Factory implements Factory<StartViewModel> {
  private final Provider<InsertDataUseCase> insertDataUseCaseProvider;

  public StartViewModel_Factory(Provider<InsertDataUseCase> insertDataUseCaseProvider) {
    this.insertDataUseCaseProvider = insertDataUseCaseProvider;
  }

  @Override
  public StartViewModel get() {
    return newInstance(insertDataUseCaseProvider.get());
  }

  public static StartViewModel_Factory create(
      Provider<InsertDataUseCase> insertDataUseCaseProvider) {
    return new StartViewModel_Factory(insertDataUseCaseProvider);
  }

  public static StartViewModel newInstance(InsertDataUseCase insertDataUseCase) {
    return new StartViewModel(insertDataUseCase);
  }
}
