// Generated by Dagger (https://dagger.dev).
package ru.pakarpichev.getbinapplication.domain.usecases;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import ru.pakarpichev.getbinapplication.domain.repository.BinRepository;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DeleteDataUseCase_Factory implements Factory<DeleteDataUseCase> {
  private final Provider<BinRepository> binRepositoryProvider;

  public DeleteDataUseCase_Factory(Provider<BinRepository> binRepositoryProvider) {
    this.binRepositoryProvider = binRepositoryProvider;
  }

  @Override
  public DeleteDataUseCase get() {
    return newInstance(binRepositoryProvider.get());
  }

  public static DeleteDataUseCase_Factory create(Provider<BinRepository> binRepositoryProvider) {
    return new DeleteDataUseCase_Factory(binRepositoryProvider);
  }

  public static DeleteDataUseCase newInstance(BinRepository binRepository) {
    return new DeleteDataUseCase(binRepository);
  }
}
