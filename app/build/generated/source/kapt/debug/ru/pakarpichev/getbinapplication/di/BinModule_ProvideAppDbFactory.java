// Generated by Dagger (https://dagger.dev).
package ru.pakarpichev.getbinapplication.di;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import ru.pakarpichev.getbinapplication.data.AppDatabase;

@ScopeMetadata
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BinModule_ProvideAppDbFactory implements Factory<AppDatabase> {
  private final BinModule module;

  private final Provider<Context> appcontextProvider;

  public BinModule_ProvideAppDbFactory(BinModule module, Provider<Context> appcontextProvider) {
    this.module = module;
    this.appcontextProvider = appcontextProvider;
  }

  @Override
  public AppDatabase get() {
    return provideAppDb(module, appcontextProvider.get());
  }

  public static BinModule_ProvideAppDbFactory create(BinModule module,
      Provider<Context> appcontextProvider) {
    return new BinModule_ProvideAppDbFactory(module, appcontextProvider);
  }

  public static AppDatabase provideAppDb(BinModule instance, Context appcontext) {
    return Preconditions.checkNotNullFromProvides(instance.provideAppDb(appcontext));
  }
}
